// <auto-generated />
using System;
using DataBaseAPI.Data.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBaseAPI.Migrations
{
    [DbContext(typeof(UnicornContext))]
    partial class UnicornContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBaseAPI.Models.HornType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Decoration");

                    b.Property<string>("Material");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("HornTypes");
                });

            modelBuilder.Entity("DataBaseAPI.Models.Unicorn", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Breed");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Description");

                    b.Property<Guid?>("HornTypesId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSold");

                    b.Property<string>("Name");

                    b.Property<string>("Origin");

                    b.HasKey("Id");

                    b.HasIndex("HornTypesId");

                    b.ToTable("Unicorns");
                });

            modelBuilder.Entity("DataBaseAPI.Models.Unicorn", b =>
                {
                    b.HasOne("DataBaseAPI.Models.HornType", "HornType")
                        .WithMany()
                        .HasForeignKey("HornTypesId");
                });
#pragma warning restore 612, 618
        }
    }
}
